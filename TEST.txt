

Handler.handle_line('func(x) = mod([[1]])')

# Handler.handle_line('c = mod(3i + 2) + 20')
# Handler.handle_line('c = mod(3i + 2) + mod(23)')
# Handler.handle_line('c = 3i + 2 + 2')
# Handler.handle_line('cos(0) =?')
# Handler.handle_line('sin(0) + cos(-1) =?')
# Handler.handle_line('x = cos(122) + atan(22) + abs(-2) + sin(-3) - tan(2) + rad(2)')
# Handler.handle_line('1+2=?') good
# Handler.handle_line('func(x)=c?')
# Handler.handle_line('func(x)=14?')

# Handler.handle_line('funA(x) = z?')
# Handler.handle_line('x+x= 2') # poly x = 0 # ne reshaetsya


сделать подробное описание в CMD (sim cos и прочее)
добавить закладки в ноушн
сабжект тесты

# print('12.2'.isnumeric())
# Handler.handle_line("func(x) = 123123123x  - 2^3") #  good

# протестить каждый тип
mod(3 - 3i)
mod(-3 - 3i)
0 + x + 1 + 2x +123 =?
проверка истории 
пролверка созранненных переменных
исключеняи работаю ок?

OVERFOLOW (2 + 2x)^15 и больше
разные типы вместо x
прочитать сабжект

какие-то тесты в тетрадке протестить

func(x) = 2
func(12 ) = 15


- обработать везде деление на 0. попробовать все типы поделить на 0
- сложение между типов, должна быть ошибка

- сделать отдельный блок с разделом тестов из сабжа
- проверить на лишение знаки % < > и прочее
